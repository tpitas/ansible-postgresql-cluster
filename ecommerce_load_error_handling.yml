---
# installed if needed : ansible-galaxy collection install community.postgresql
- name: Setup ecommerce database, table, and load csv data
  hosts: mhost1
  become: yes
  become_user: postgres

  vars:
    db_name: ecommerce
    csv_src: /home/devops/myansible2025/cogsley_sales.csv     # control node path
    csv_dest: /tmp/cogsley_sales.csv                          # remote host path

  tasks:
    - name: Create ecommerce database if not exists
      community.postgresql.postgresql_db:
        name: "{{ db_name }}"
        state: present
      register: create_db_result
      failed_when: create_db_result.failed and "'already exists' not in (create_db_result.msg | default(''))"

    - name: Debug database creation result
      debug:
        var: create_db_result

    - name: Create cogsley_sales table in ecommerce database
      community.postgresql.postgresql_query:
        db: "{{ db_name }}"
        query: |
          create table if not exists cogsley_sales (
            row_id integer primary key,
            order_id integer,
            order_date date,
            order_month_year date,
            quantity integer,
            quote numeric,
            discount_percent numeric,
            rate numeric,
            sale_amount numeric,
            customer_name text,
            company_name text,
            sector text,
            industry text,
            city text,
            zip_code text,
            state text,
            region text,
            project_complete_date date,
            days_to_complete integer,
            product_id text,
            product_category text,
            product_subcategory text,
            consultant text,
            manager text,
            hourly_wage numeric,
            row_count integer,
            wage_margin numeric
          );
      register: create_table_result
      failed_when: create_table_result.failed

    - name: Debug cogsley_sales table creation result
      debug:
        var: create_table_result

    - name: Copy cogsley_sales.csv file to remote host /tmp
      ansible.builtin.copy:
        src: "{{ csv_src }}"
        dest: "{{ csv_dest }}"
        mode: '0644'
      register: copy_file_result
      failed_when: copy_file_result.failed

    - name: Debug file copy result
      debug:
        var: copy_file_result

    - name: Truncate cogsley_sales table before loading new data
      community.postgresql.postgresql_query:
        db: "{{ db_name }}"
        query: "truncate table cogsley_sales;"
      register: truncate_result
      failed_when: truncate_result.failed

    - name: Debug truncate table result
      debug:
        var: truncate_result

    - name: Load csv data into cogsley_sales table using psql \copy (client-side)
      ansible.builtin.shell: |
        psql -d {{ db_name }} -c "\copy cogsley_sales from '{{ csv_dest }}' with csv header"
      args:
        executable: /bin/bash
      register: load_csv_result
      failed_when: load_csv_result.rc != 0

    - name: Debug load csv result
      debug:
        var: load_csv_result

    - name: Ensure psql is available
      ansible.builtin.command: which psql
      register: psql_check
      failed_when: psql_check.rc != 0

    - name: Count rows in cogsley_sales after loading # log csv row count before/after loading 
      community.postgresql.postgresql_query:
        db: "{{ db_name }}"
        query: "select count(*) from cogsley_sales;"
      register: count_result

    - name: Show row count
      debug:
        var: count_result
